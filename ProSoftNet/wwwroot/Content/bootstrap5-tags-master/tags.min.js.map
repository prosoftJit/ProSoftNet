{
  "version": 3,
  "sources": ["tags.js"],
  "sourcesContent": ["/**\r\n * Bootstrap 5 (and 4!) tags\r\n *\r\n * Turns your select[multiple] into nice tags lists\r\n *\r\n * Required Bootstrap 5 styles:\r\n * - badge\r\n * - background-color utility\r\n * - text-truncate utility\r\n * - forms\r\n * - dropdown\r\n */\r\n\r\n// #region config\r\n\r\n/**\r\n * @callback EventCallback\r\n * @param {Event} event\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback ServerCallback\r\n * @param {Response} response\r\n * @param {Tags} inst\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * @callback ModalItemCallback\r\n * @param {String} value\r\n * @param {Tags} inst\r\n * @returns {Promise}\r\n */\r\n\r\n/**\r\n * @callback RenderCallback\r\n * @param {Suggestion} item\r\n * @param {String} label\r\n * @param {Tags} inst\r\n * @returns {String}\r\n */\r\n\r\n/**\r\n * @callback ItemCallback\r\n * @param {Suggestion} item\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback ValueCallback\r\n * @param {String} value\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @callback AddCallback\r\n * @param {String} value\r\n * @param {Object} data\r\n * @param {Tags} inst\r\n * @returns {void|Boolean}\r\n */\r\n\r\n/**\r\n * @callback CreateCallback\r\n * @param {HTMLOptionElement} option\r\n * @param {Tags} inst\r\n * @returns {void}\r\n */\r\n\r\n/**\r\n * @typedef Config\r\n * @property {Array<Suggestion|SuggestionGroup>} items Source items\r\n * @property {Boolean} allowNew Allows creation of new tags\r\n * @property {Boolean} showAllSuggestions Show all suggestions even if they don't match. Disables validation.\r\n * @property {String} badgeStyle Color of the badge (color can be configured per option as well)\r\n * @property {Boolean} allowClear Show a clear icon\r\n * @property {Boolean} clearEnd Place clear icon at the end\r\n * @property {Array} selected A list of initially selected values\r\n * @property {String} regex Regex for new tags\r\n * @property {Array|String} separator A list (pipe separated) of characters that should act as separator (default is using enter key)\r\n * @property {Number} max Limit to a maximum of tags (0 = no limit)\r\n * @property {String} placeholder Provides a placeholder if none are provided as the first empty option\r\n * @property {String} clearLabel Text as clear tooltip\r\n * @property {String} searchLabel Default placeholder\r\n * @property {Boolean} showDropIcon Show dropdown icon\r\n * @property {Boolean} keepOpen Keep suggestions open after selection, clear on focus out\r\n * @property {Boolean} allowSame Allow same tags used multiple times\r\n * @property {String} baseClass Customize the class applied to badges\r\n * @property {Boolean} addOnBlur Add new tags on blur (only if allowNew is enabled)\r\n * @property {Boolean} showDisabled Show disabled tags\r\n * @property {Boolean} hideNativeValidation Hide native validation tooltips\r\n * @property {Number} suggestionsThreshold Number of chars required to show suggestions\r\n * @property {Number} maximumItems Maximum number of items to display\r\n * @property {Boolean} autoselectFirst Always select the first item\r\n * @property {Boolean} updateOnSelect Update input value on selection (doesn't play nice with autoselectFirst)\r\n * @property {Boolean} highlightTyped Highlight matched part of the suggestion\r\n * @property {String} highlightClass Class applied to the mark element\r\n * @property {Boolean} fullWidth Match the width on the input field\r\n * @property {Boolean} fixed Use fixed positioning (solve overflow issues)\r\n * @property {Boolean} fuzzy Fuzzy search\r\n * @property {Boolean} startsWith Must start with the string. Defaults to false (it matches any position).\r\n * @property {Boolean} singleBadge Show badge for single elements\r\n * @property {Array} activeClasses By default: [\"bg-primary\", \"text-white\"]\r\n * @property {String} labelField Key for the label\r\n * @property {String} valueField Key for the value\r\n * @property {Array} searchFields Key for the search\r\n * @property {String} queryParam Name of the param passed to endpoint (query by default)\r\n * @property {String} server Endpoint for data provider\r\n * @property {String} serverMethod HTTP request method for data provider, default is GET\r\n * @property {String|Object} serverParams Parameters to pass along to the server. You can specify a \"related\" key with the id of a related field.\r\n * @property {String} serverDataKey By default: data\r\n * @property {Object} fetchOptions Any other fetch options (https://developer.mozilla.org/en-US/docs/Web/API/fetch#syntax)\r\n * @property {Boolean} liveServer Should the endpoint be called each time on input\r\n * @property {Boolean} noCache Prevent caching by appending a timestamp\r\n * @property {Number} debounceTime Debounce time for live server\r\n * @property {String} notFoundMessage Display a no suggestions found message. Leave empty to disable\r\n * @property {RenderCallback} onRenderItem Callback function that returns the suggestion\r\n * @property {ItemCallback} onSelectItem Callback function to call on selection\r\n * @property {ValueCallback} onClearItem Callback function to call on clear\r\n * @property {CreateCallback} onCreateItem Callback function when an item is created\r\n * @property {EventCallback} onBlur Callback function on blur\r\n * @property {EventCallback} onFocus Callback function on focus\r\n * @property {AddCallback} onCanAdd Callback function to validate item. Return false to show validation message.\r\n * @property {ServerCallback} onServerResponse Callback function to process server response. Must return a Promise\r\n * @property {ModalItemCallback} confirmClear Allow modal confirmation of clear. Must return a Promise\r\n * @property {ModalItemCallback} confirmAdd Allow modal confirmation of add. Must return a Promise\r\n */\r\n\r\n/**\r\n * @typedef Suggestion\r\n * @property {String} value Can be overriden by config valueField\r\n * @property {String} label Can be overriden by config labelField\r\n * @property {Boolean} disabled\r\n * @property {Object} data\r\n * @property {Boolean} [selected]\r\n * @property {Number} [group_id]\r\n */\r\n\r\n/**\r\n * @typedef SuggestionGroup\r\n * @property {String} group\r\n * @property {Array} items\r\n */\r\n\r\n/**\r\n * @type {Config}\r\n */\r\nconst DEFAULTS = {\r\n  items: [],\r\n  allowNew: false,\r\n  showAllSuggestions: false,\r\n  badgeStyle: \"primary\",\r\n  allowClear: false,\r\n  clearEnd: false,\r\n  selected: [],\r\n  regex: \"\",\r\n  separator: [],\r\n  max: 0,\r\n  clearLabel: \"Clear\",\r\n  searchLabel: \"Type a value\",\r\n  showDropIcon: true,\r\n  keepOpen: false,\r\n  allowSame: false,\r\n  baseClass: \"\",\r\n  placeholder: \"\",\r\n  addOnBlur: false,\r\n  showDisabled: false,\r\n  hideNativeValidation: false,\r\n  suggestionsThreshold: -1,\r\n  maximumItems: 0,\r\n  autoselectFirst: true,\r\n  updateOnSelect: false,\r\n  highlightTyped: false,\r\n  highlightClass: \"\",\r\n  fullWidth: true,\r\n  fixed: false,\r\n  fuzzy: false,\r\n  startsWith: false,\r\n  singleBadge: false,\r\n  activeClasses: [\"bg-primary\", \"text-white\"],\r\n  labelField: \"label\",\r\n  valueField: \"value\",\r\n  searchFields: [\"label\"],\r\n  queryParam: \"query\",\r\n  server: \"\",\r\n  serverMethod: \"GET\",\r\n  serverParams: {},\r\n  serverDataKey: \"data\",\r\n  fetchOptions: {},\r\n  liveServer: false,\r\n  noCache: true,\r\n  debounceTime: 300,\r\n  notFoundMessage: \"\",\r\n  onRenderItem: (item, label, inst) => {\r\n    return label;\r\n  },\r\n  onSelectItem: (item, inst) => {},\r\n  onClearItem: (value, inst) => {},\r\n  onCreateItem: (option, inst) => {},\r\n  onBlur: (event, inst) => {},\r\n  onFocus: (event, inst) => {},\r\n  onCanAdd: (text, data, inst) => {},\r\n  confirmClear: (item, inst) => Promise.resolve(),\r\n  confirmAdd: (item, inst) => Promise.resolve(),\r\n  onServerResponse: (response, inst) => {\r\n    return response.json();\r\n  },\r\n};\r\n\r\n// #endregion\r\n\r\n// #region constants\r\n\r\nconst CLASS_PREFIX = \"tags-\";\r\nconst LOADING_CLASS = \"is-loading\";\r\nconst ACTIVE_CLASS = \"is-active\";\r\nconst INVALID_CLASS = \"is-invalid\";\r\nconst MAX_REACHED_CLASS = \"is-max-reached\";\r\nconst SHOW_CLASS = \"show\";\r\nconst VALUE_ATTRIBUTE = \"data-value\";\r\nconst NEXT = \"next\";\r\nconst PREV = \"prev\";\r\nconst FOCUS_CLASS = \"form-control-focus\"; // should match form-control:focus\r\nconst PLACEHOLDER_CLASS = \"form-placeholder-shown\"; // should match :placeholder-shown\r\nconst DISABLED_CLASS = \"form-control-disabled\"; // should match form-control:disabled\r\nconst INSTANCE_MAP = new WeakMap();\r\nlet counter = 0;\r\n//@ts-ignore\r\nlet tooltip = window.bootstrap && window.bootstrap.Tooltip;\r\n\r\n// #endregion\r\n\r\n// #region functions\r\n\r\n/**\r\n * @param {Function} func\r\n * @param {number} timeout\r\n * @returns {Function}\r\n */\r\nfunction debounce(func, timeout = 300) {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      //@ts-ignore\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n}\r\n\r\n/**\r\n * @param {string} text\r\n * @param {string} size\r\n * @returns {Number}\r\n */\r\nfunction calcTextWidth(text, size = null) {\r\n  const span = ce(\"span\");\r\n  document.body.appendChild(span);\r\n  span.style.fontSize = size || \"inherit\";\r\n  span.style.height = \"auto\";\r\n  span.style.width = \"auto\";\r\n  span.style.position = \"absolute\";\r\n  span.style.whiteSpace = \"no-wrap\";\r\n  span.innerHTML = text;\r\n  const width = Math.ceil(span.clientWidth);\r\n  document.body.removeChild(span);\r\n  return width;\r\n}\r\n\r\n/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nfunction removeDiacritics(str) {\r\n  return str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n}\r\n\r\n/**\r\n * @param {String|Number} str\r\n * @returns {String}\r\n */\r\nfunction normalize(str) {\r\n  if (!str) {\r\n    return \"\";\r\n  }\r\n  return removeDiacritics(str.toString()).toLowerCase();\r\n}\r\n\r\n/**\r\n * A simple fuzzy match algorithm that checks if chars are matched\r\n * in order in the target string\r\n *\r\n * @param {String} str\r\n * @param {String} lookup\r\n * @returns {Boolean}\r\n */\r\nfunction fuzzyMatch(str, lookup) {\r\n  if (str.indexOf(lookup) >= 0) {\r\n    return true;\r\n  }\r\n  let pos = 0;\r\n  for (let i = 0; i < lookup.length; i++) {\r\n    const c = lookup[i];\r\n    if (c == \" \") continue;\r\n    pos = str.indexOf(c, pos) + 1;\r\n    if (pos <= 0) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} item\r\n */\r\nfunction hideItem(item) {\r\n  item.style.display = \"none\";\r\n  attrs(item, {\r\n    \"aria-hidden\": \"true\",\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} item\r\n */\r\nfunction showItem(item) {\r\n  item.style.display = \"list-item\";\r\n  attrs(item, {\r\n    \"aria-hidden\": \"false\",\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {Object} attrs\r\n */\r\nfunction attrs(el, attrs) {\r\n  for (const [k, v] of Object.entries(attrs)) {\r\n    el.setAttribute(k, v);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {string} attr\r\n */\r\nfunction rmAttr(el, attr) {\r\n  if (el.hasAttribute(attr)) {\r\n    el.removeAttribute(attr);\r\n  }\r\n}\r\n\r\n/**\r\n * Allow 1/0, true/false as strings\r\n * @param {any} value\r\n * @returns {Boolean}\r\n */\r\nfunction parseBool(value) {\r\n  return [\"true\", \"false\", \"1\", \"0\", true, false].includes(value) && !!JSON.parse(value);\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K|String} tagName Name of the element\r\n * @returns {*}\r\n */\r\nfunction ce(tagName) {\r\n  return document.createElement(tagName);\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {HTMLElement} newEl\r\n * @returns {HTMLElement}\r\n */\r\n// function insertAfter(el, newEl) {\r\n//   return el.parentNode.insertBefore(newEl, el.nextSibling);\r\n// }\r\n\r\n// #endregion\r\n\r\nclass Tags {\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   * @param {Object|Config} config\r\n   */\r\n  constructor(el, config = {}) {\r\n    if (!(el instanceof HTMLElement)) {\r\n      console.error(\"Invalid element\", el);\r\n      return;\r\n    }\r\n    INSTANCE_MAP.set(el, this);\r\n    counter++;\r\n    this._selectElement = el;\r\n\r\n    this._configure(config);\r\n\r\n    // private vars\r\n    this._keyboardNavigation = false;\r\n    this._searchFunc = debounce(() => {\r\n      this._loadFromServer(true);\r\n    }, this._config.debounceTime);\r\n    this._fireEvents = true;\r\n\r\n    this._configureParent();\r\n\r\n    // Create elements\r\n    this._holderElement = ce(\"div\"); // this is the one holding the fake input and the dropmenu\r\n    this._containerElement = ce(\"div\"); // this is the one for the fake input (labels + input)\r\n    this._dropElement = ce(\"ul\"); // this dropdown list\r\n    this._searchInput = ce(\"input\"); // the input element\r\n    this._holderElement.appendChild(this._containerElement);\r\n\r\n    // insert before select, this helps having native validation tooltips positioned properly\r\n    this._selectElement.parentElement.insertBefore(this._holderElement, this._selectElement);\r\n    // insertAfter(this._selectElement, this._holderElement);\r\n\r\n    // Configure them\r\n    this._configureHolderElement();\r\n    this._configureContainerElement();\r\n    this._configureSelectElement();\r\n    this._configureSearchInput();\r\n    this._configureDropElement();\r\n    this.resetState();\r\n\r\n    // Rebind handleEvent to make sure the scope will not change\r\n    this.handleEvent = (ev) => {\r\n      this._handleEvent(ev);\r\n    };\r\n\r\n    if (this._config.fixed) {\r\n      document.addEventListener(\"scroll\", this, true); // capture input for all scrollables elements\r\n      window.addEventListener(\"resize\", this);\r\n    }\r\n\r\n    // Add listeners (remove then on dispose()). See handleEvent.\r\n    [\"focus\", \"blur\", \"input\", \"keydown\"].forEach((type) => {\r\n      this._searchInput.addEventListener(type, this);\r\n    });\r\n    [\"mousemove\", \"mouseleave\"].forEach((type) => {\r\n      this._dropElement.addEventListener(type, this);\r\n    });\r\n\r\n    this.loadData(true);\r\n  }\r\n\r\n  // #region Core\r\n\r\n  /**\r\n   * Attach to all elements matched by the selector\r\n   * @param {string} selector\r\n   * @param {Object} opts\r\n   */\r\n  static init(selector = \"select[multiple]\", opts = {}) {\r\n    /**\r\n     * @type {NodeListOf<HTMLSelectElement>}\r\n     */\r\n    let list = document.querySelectorAll(selector);\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (Tags.getInstance(list[i])) {\r\n        continue;\r\n      }\r\n      new Tags(list[i], opts);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLSelectElement} el\r\n   */\r\n  static getInstance(el) {\r\n    if (INSTANCE_MAP.has(el)) {\r\n      return INSTANCE_MAP.get(el);\r\n    }\r\n  }\r\n\r\n  dispose() {\r\n    [\"focus\", \"blur\", \"input\", \"keydown\"].forEach((type) => {\r\n      this._searchInput.removeEventListener(type, this);\r\n    });\r\n    [\"mousemove\", \"mouseleave\"].forEach((type) => {\r\n      this._dropElement.removeEventListener(type, this);\r\n    });\r\n\r\n    if (this._config.fixed) {\r\n      document.removeEventListener(\"scroll\", this, true);\r\n      window.removeEventListener(\"resize\", this);\r\n    }\r\n\r\n    // restore select, remove our custom stuff and unbind parent\r\n    this._selectElement.style.display = \"block\";\r\n    this._holderElement.parentElement.removeChild(this._holderElement);\r\n    if (this.parentForm) {\r\n      this.parentForm.removeEventListener(\"reset\", this);\r\n    }\r\n\r\n    INSTANCE_MAP.delete(this._selectElement);\r\n  }\r\n\r\n  /**\r\n   * event-polyfill compat / handleEvent is expected on class\r\n   * @link https://github.com/lifaon74/events-polyfill/issues/10\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    this._handleEvent(event);\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  _handleEvent(event) {\r\n    // debounce scroll and resize\r\n    const debounced = [\"scroll\", \"resize\"];\r\n    if (debounced.includes(event.type)) {\r\n      if (this._timer) window.cancelAnimationFrame(this._timer);\r\n      this._timer = window.requestAnimationFrame(() => {\r\n        this[`on${event.type}`](event);\r\n      });\r\n    } else {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Config|Object} config\r\n   */\r\n  _configure(config = {}) {\r\n    this._config = Object.assign({}, DEFAULTS, {\r\n      // Hide icon by default if no value\r\n      showDropIcon: this._findOption() ? true : false,\r\n    });\r\n\r\n    const json = this._selectElement.dataset.config ? JSON.parse(this._selectElement.dataset.config) : {};\r\n    // Handle options, using arguments first, then json config and then data attr as override\r\n    const o = { ...config, ...json, ...this._selectElement.dataset };\r\n\r\n    // Typecast provided options based on defaults types\r\n    for (const [key, defaultValue] of Object.entries(DEFAULTS)) {\r\n      // Check for undefined keys\r\n      if (key == \"config\" || o[key] === void 0) {\r\n        continue;\r\n      }\r\n      const value = o[key];\r\n      switch (typeof defaultValue) {\r\n        case \"number\":\r\n          this._config[key] = parseInt(value);\r\n          break;\r\n        case \"boolean\":\r\n          this._config[key] = parseBool(value);\r\n          break;\r\n        case \"string\":\r\n          this._config[key] = value.toString();\r\n          break;\r\n        case \"object\":\r\n          this._config[key] = value;\r\n          if (typeof value === \"string\") {\r\n            if ([\"{\", \"[\"].includes(value[0])) {\r\n              // JSON like string\r\n              this._config[key] = JSON.parse(value);\r\n            } else {\r\n              // CSV or pipe separated string\r\n              this._config[key] = value.split(value.includes(\"|\") ? \"|\" : \",\");\r\n            }\r\n          }\r\n          break;\r\n        case \"function\":\r\n          // Find a global function with this name\r\n          this._config[key] = typeof value === \"string\" ? value.split(\".\").reduce((r, p) => r[p], window) : value;\r\n          if (!this._config[key]) {\r\n            console.error(\"Invalid function\", value);\r\n          }\r\n          break;\r\n        default:\r\n          this._config[key] = value;\r\n          break;\r\n      }\r\n    }\r\n\r\n    // Dynamic default values\r\n    if (!this._config.placeholder) {\r\n      this._config.placeholder = this._getPlaceholder();\r\n    }\r\n    if (this._config.suggestionsThreshold == -1) {\r\n      // if we don't have ajax auto completion, behave like a select by default\r\n      this._config.suggestionsThreshold = this._config.liveServer ? 1 : 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {String} k\r\n   * @returns {*}\r\n   */\r\n  config(k = null) {\r\n    return k ? this._config[k] : this._config;\r\n  }\r\n\r\n  /**\r\n   * @param {String} k\r\n   * @param {*} v\r\n   */\r\n  setConfig(k, v) {\r\n    this._config[k] = v;\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Html\r\n\r\n  /**\r\n   * Find overflow parent for positioning\r\n   * and bind reset event of the parent form\r\n   */\r\n  _configureParent() {\r\n    this.overflowParent = null;\r\n    this.parentForm = this._selectElement.parentElement;\r\n    while (this.parentForm) {\r\n      if (this.parentForm.style.overflow === \"hidden\") {\r\n        this.overflowParent = this.parentForm;\r\n      }\r\n      this.parentForm = this.parentForm.parentElement;\r\n      if (this.parentForm && this.parentForm.nodeName == \"FORM\") {\r\n        break;\r\n      }\r\n    }\r\n    if (this.parentForm) {\r\n      this.parentForm.addEventListener(\"reset\", this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {string}\r\n   */\r\n  _getPlaceholder() {\r\n    // Use placeholder and data-placeholder in priority\r\n    if (this._selectElement.hasAttribute(\"placeholder\")) {\r\n      return this._selectElement.getAttribute(\"placeholder\");\r\n    }\r\n    if (this._selectElement.dataset.placeholder) {\r\n      return this._selectElement.dataset.placeholder;\r\n    }\r\n    // Fallback to first option if no value\r\n    let firstOption = this._selectElement.querySelector(\"option\");\r\n    if (!firstOption || !this._config.autoselectFirst) {\r\n      return \"\";\r\n    }\r\n    rmAttr(firstOption, \"selected\");\r\n    firstOption.selected = false;\r\n    return !firstOption.value ? firstOption.textContent : \"\";\r\n  }\r\n\r\n  _configureSelectElement() {\r\n    const selectEl = this._selectElement;\r\n\r\n    // Hiding the select should keep it focusable, otherwise we get this\r\n    // An invalid form control with name='...' is not focusable.\r\n    // If it's not focusable, we need to remove the native validation attributes\r\n\r\n    // If we use display none, we don't get the focus event\r\n    // selectEl.style.display = \"none\";\r\n\r\n    // If we position it like this, the html5 validation message will not display properly\r\n    if (this._config.hideNativeValidation) {\r\n      // This position dont break render within input-group and is focusable\r\n      selectEl.style.position = \"absolute\";\r\n      selectEl.style.left = \"-9999px\";\r\n    } else {\r\n      // Hide but keep it focusable. If 0 height, no native validation message will show\r\n      // It is placed below so that native tooltip is displayed properly\r\n      // Flex basis is required for input-group otherwise it breaks the layout\r\n      selectEl.style.cssText = `height:1px;width:1px;opacity:0;padding:0;margin:0;border:0;float:left;flex-basis:100%;`;\r\n    }\r\n\r\n    // Make sure it's not usable using tab\r\n    selectEl.tabIndex = -1;\r\n\r\n    // No need for custom label click event if select is focusable\r\n    // const label = document.querySelector('label[for=\"' + selectEl.getAttribute(\"id\") + '\"]');\r\n    // if (label) {\r\n    //   label.addEventListener(\"click\", this);\r\n    // }\r\n\r\n    // It can be focused by clicking on the label\r\n    selectEl.addEventListener(\"focus\", (event) => {\r\n      this.onclick(event);\r\n    });\r\n\r\n    // When using regular html5 validation, make sure our fake element get the proper class\r\n    selectEl.addEventListener(\"invalid\", (event) => {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Configure drop element\r\n   * Needs to be called after searchInput is created\r\n   */\r\n  _configureDropElement() {\r\n    const dropEl = this._dropElement;\r\n    dropEl.classList.add(...[\"dropdown-menu\", CLASS_PREFIX + \"menu\"]);\r\n    dropEl.id = CLASS_PREFIX + \"menu-\" + counter;\r\n    dropEl.setAttribute(\"role\", \"menu\");\r\n\r\n    const dropStyles = dropEl.style;\r\n    dropStyles.padding = \"0\"; // avoid ugly space before option\r\n    dropStyles.maxHeight = \"280px\";\r\n    if (!this._config.fullWidth) {\r\n      dropStyles.maxWidth = \"360px\";\r\n    }\r\n    if (this._config.fixed) {\r\n      dropStyles.position = \"fixed\";\r\n    }\r\n    dropStyles.overflowY = \"auto\";\r\n    // Prevent scrolling the menu from scrolling the page\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior\r\n    dropStyles.overscrollBehavior = \"contain\";\r\n    dropStyles.textAlign = \"unset\"; // otherwise RTL is not good\r\n\r\n    // If the mouse was outside, entering remove keyboard nav mode\r\n    dropEl.addEventListener(\"mouseenter\", (event) => {\r\n      this._keyboardNavigation = false;\r\n    });\r\n    this._holderElement.appendChild(dropEl);\r\n\r\n    // include aria-controls with the value of the id of the suggested list of values.\r\n    this._searchInput.setAttribute(\"aria-controls\", dropEl.id);\r\n  }\r\n\r\n  _configureHolderElement() {\r\n    const holder = this._holderElement;\r\n    holder.classList.add(...[\"form-control\", \"dropdown\"]);\r\n    // Reflect size (we must use form-select-xx because we may use form-select) and validation\r\n    [\"form-select-lg\", \"form-select-sm\", \"is-invalid\", \"is-valid\"].forEach((className) => {\r\n      if (this._selectElement.classList.contains(className)) {\r\n        holder.classList.add(className);\r\n      }\r\n    });\r\n\r\n    // It is really more like a dropdown\r\n    if (this._config.suggestionsThreshold == 0 && this._config.showDropIcon) {\r\n      holder.classList.add(\"form-select\");\r\n    }\r\n\r\n    // If we have an overflow parent, we can simply inherit styles\r\n    if (this.overflowParent) {\r\n      holder.style.position = \"inherit\";\r\n    }\r\n    // Prevent fixed height due to form-control in bs4\r\n    holder.style.height = \"auto\";\r\n\r\n    // Without this, clicking on a floating label won't always focus properly\r\n    holder.addEventListener(\"click\", this);\r\n  }\r\n\r\n  _configureContainerElement() {\r\n    this._containerElement.addEventListener(\"click\", (event) => {\r\n      if (this.isDisabled()) {\r\n        return;\r\n      }\r\n      if (this._searchInput.style.visibility != \"hidden\") {\r\n        this._searchInput.focus();\r\n      }\r\n    });\r\n\r\n    // Add some extra css to help positioning\r\n    const containerStyles = this._containerElement.style;\r\n    containerStyles.display = \"flex\";\r\n    containerStyles.alignItems = \"center\";\r\n    containerStyles.flexWrap = \"wrap\";\r\n  }\r\n\r\n  _configureSearchInput() {\r\n    const searchInput = this._searchInput;\r\n\r\n    searchInput.type = \"text\";\r\n    searchInput.autocomplete = \"off\";\r\n    searchInput.spellcheck = false;\r\n    // note: firefox doesn't support the properties so we use attributes\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete\r\n    // @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded\r\n    // use the aria-expanded state on the element with role combobox to communicate that the list is displayed.\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/ariaLabel\r\n    attrs(searchInput, {\r\n      \"aria-autocomplete\": \"list\",\r\n      \"aria-haspopup\": \"menu\",\r\n      \"aria-expanded\": \"false\",\r\n      \"aria-label\": this._config.searchLabel,\r\n      role: \"combobox\",\r\n    });\r\n    searchInput.style.cssText = `background-color:transparent;color:currentColor;border:0;padding:0;outline:0;max-width:100%`;\r\n    this.resetSearchInput(true);\r\n\r\n    this._containerElement.appendChild(searchInput);\r\n    this._rtl = window.getComputedStyle(searchInput).direction === \"rtl\";\r\n  }\r\n\r\n  // #endregion\r\n\r\n  // #region Events\r\n\r\n  onfocus(event) {\r\n    this._holderElement.classList.add(FOCUS_CLASS);\r\n    this.showOrSearch();\r\n    this._config.onFocus(event, this);\r\n  }\r\n\r\n  onblur(event) {\r\n    // Cancel any pending request\r\n    if (this._abortController) {\r\n      this._abortController.abort();\r\n    }\r\n    let clearValidation = true;\r\n    if (this._config.addOnBlur && this._searchInput.value) {\r\n      clearValidation = this._enterValue();\r\n    }\r\n    this._holderElement.classList.remove(FOCUS_CLASS);\r\n    this.hideSuggestions(clearValidation);\r\n    if (this._fireEvents) {\r\n      const sel = this.getSelection();\r\n      const data = {\r\n        selection: sel ? sel.dataset.value : null,\r\n        input: this._searchInput.value,\r\n      };\r\n      this._config.onBlur(event, this);\r\n      this._selectElement.dispatchEvent(new CustomEvent(\"tags.blur\", { bubbles: true, detail: data }));\r\n    }\r\n  }\r\n\r\n  oninput(ev) {\r\n    const data = this._searchInput.value;\r\n\r\n    // Add item if a separator is used\r\n    // On mobile or copy paste, it can pass multiple chars (eg: when pressing space and it formats the string)\r\n    if (data) {\r\n      const lastChar = data.slice(-1);\r\n      if (this._config.separator.length && this._config.separator.includes(lastChar)) {\r\n        // Remove separator even if adding is prevented\r\n        this._searchInput.value = this._searchInput.value.slice(0, -1);\r\n        let value = this._searchInput.value;\r\n        let label = value;\r\n        let addData = {};\r\n        // There is no good reason to use the separator feature without allowNew, but who knows!\r\n        if (!this._config.allowNew) {\r\n          const sel = this.getSelection();\r\n          if (!sel) {\r\n            return;\r\n          }\r\n          value = sel.getAttribute(VALUE_ATTRIBUTE);\r\n          label = sel.dataset.label;\r\n        } else {\r\n          addData.new = 1;\r\n        }\r\n        this._config\r\n          .confirmAdd(value, this)\r\n          .then(() => {\r\n            this._add(label, value, addData);\r\n          })\r\n          .catch(() => {});\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Adjust input width to current content\r\n    setTimeout(() => {\r\n      this._adjustWidth();\r\n    });\r\n\r\n    // Check if we should display suggestions\r\n    this.showOrSearch();\r\n  }\r\n\r\n  /**\r\n   * keypress doesn't send arrow keys, so we use keydown\r\n   * @param {KeyboardEvent} event\r\n   */\r\n  onkeydown(event) {\r\n    // Keycode reference : https://css-tricks.com/snippets/javascript/javascript-keycodes/\r\n    let key = event.keyCode || event.key;\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    // @ts-ignore\r\n    const target = event.target;\r\n\r\n    // Android virtual keyboard might always return 229\r\n    if (event.keyCode == 229) {\r\n      key = target.value.charAt(target.selectionStart - 1).charCodeAt(0);\r\n    }\r\n\r\n    // Keyboard keys\r\n    switch (key) {\r\n      case 13:\r\n      case \"Enter\":\r\n        event.preventDefault();\r\n        this._enterValue();\r\n        break;\r\n      case 38:\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        this._moveSelection(PREV);\r\n        break;\r\n      case 40:\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        this._keyboardNavigation = true;\r\n        if (this.isDropdownVisible()) {\r\n          this._moveSelection(NEXT);\r\n        } else {\r\n          // show menu regardless of input length\r\n          this.showOrSearch(false);\r\n        }\r\n        break;\r\n      case 8:\r\n      case \"Backspace\":\r\n        // If the current item is empty, remove the last one\r\n        const lastItem = this.getLastItem();\r\n        if (this._searchInput.value.length == 0 && lastItem) {\r\n          this._config\r\n            .confirmClear(lastItem, this)\r\n            .then(() => {\r\n              this.removeLastItem();\r\n              this._adjustWidth();\r\n              this.showOrSearch();\r\n            })\r\n            .catch(() => {});\r\n        }\r\n        break;\r\n      case 27:\r\n      case \"Escape\":\r\n        this._searchInput.focus();\r\n        this.hideSuggestions();\r\n        break;\r\n    }\r\n  }\r\n\r\n  onmousemove(e) {\r\n    // Moving the mouse means no longer using keyboard\r\n    this._keyboardNavigation = false;\r\n  }\r\n\r\n  onmouseleave(e) {\r\n    // remove selection\r\n    this.removeSelection();\r\n  }\r\n\r\n  onscroll(e) {\r\n    this._positionMenu();\r\n  }\r\n\r\n  onresize(e) {\r\n    this._positionMenu();\r\n  }\r\n\r\n  onclick(e = null) {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    if (!this.isSingle() && this.isMaxReached()) {\r\n      return;\r\n    }\r\n    // Focus on input when clicking on element or focusing select\r\n    this._searchInput.focus();\r\n  }\r\n\r\n  onreset(e) {\r\n    this.reset();\r\n  }\r\n\r\n  // #endregion\r\n\r\n  /**\r\n   * @param {Boolean} init called during init\r\n   */\r\n  loadData(init = false) {\r\n    if (Object.keys(this._config.items).length > 0) {\r\n      this.setData(this._config.items, true);\r\n    } else {\r\n      // This will setData at the end\r\n      this.resetSuggestions(true);\r\n    }\r\n\r\n    if (this._config.server) {\r\n      if (this._config.liveServer) {\r\n        // No need to load anything since it will happen when typing\r\n        // Initial values are loaded from config items or from provided options\r\n      } else {\r\n        this._loadFromServer(!init);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Make sure we have valid selected attributes\r\n   */\r\n  _setSelectedAttributes() {\r\n    // we use selectedOptions because single select can have a selected option without a selected attribute if it's the first value\r\n    const selectedOptions = this._selectElement.selectedOptions || [];\r\n    for (let j = 0; j < selectedOptions.length; j++) {\r\n      // Enforce selected attr for consistency\r\n      if (selectedOptions[j].value && !selectedOptions[j].hasAttribute(\"selected\")) {\r\n        selectedOptions[j].setAttribute(\"selected\", \"selected\");\r\n      }\r\n    }\r\n  }\r\n\r\n  resetState() {\r\n    if (this.isDisabled()) {\r\n      this._holderElement.setAttribute(\"readonly\", \"\");\r\n      this._searchInput.setAttribute(\"disabled\", \"\");\r\n      this._holderElement.classList.add(DISABLED_CLASS);\r\n    } else {\r\n      rmAttr(this._holderElement, \"readonly\");\r\n      rmAttr(this._searchInput, \"disabled\");\r\n      this._holderElement.classList.remove(DISABLED_CLASS);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset suggestions from select element\r\n   * Iterates over option children then calls setData\r\n   * @param {Boolean} init called during init\r\n   */\r\n  resetSuggestions(init = false) {\r\n    this._setSelectedAttributes();\r\n\r\n    const convertOption = (option) => {\r\n      return {\r\n        value: option.getAttribute(\"value\"),\r\n        label: option.textContent,\r\n        disabled: option.disabled,\r\n        //@ts-ignore\r\n        selected: option.selected,\r\n        data: Object.assign(\r\n          {\r\n            disabled: option.disabled, // pass as data as well\r\n          },\r\n          option.dataset\r\n        ),\r\n      };\r\n    };\r\n\r\n    let suggestions = Array.from(this._selectElement.children)\r\n      .filter(\r\n        /**\r\n         * @param {HTMLOptionElement|HTMLOptGroupElement} option\r\n         */\r\n        (option) => {\r\n          return option.hasAttribute(\"label\") || !option.disabled || this._config.showDisabled;\r\n        }\r\n      )\r\n      .map(\r\n        /**\r\n         * @param {HTMLOptionElement|HTMLOptGroupElement} option\r\n         */\r\n        (option) => {\r\n          if (option.hasAttribute(\"label\")) {\r\n            return {\r\n              group: option.getAttribute(\"label\"),\r\n              items: Array.from(option.children).map((option) => {\r\n                return convertOption(option);\r\n              }),\r\n            };\r\n          }\r\n          return convertOption(option);\r\n        }\r\n      );\r\n\r\n    this.setData(suggestions, init);\r\n  }\r\n\r\n  /**\r\n   * Try to add the current value\r\n   * @returns {Boolean}\r\n   */\r\n  _enterValue() {\r\n    let selection = this.getSelection();\r\n    if (selection) {\r\n      selection.click();\r\n      return true;\r\n    } else {\r\n      // We use what is typed if not selected and not empty\r\n      if (this._config.allowNew && this._searchInput.value) {\r\n        let text = this._searchInput.value;\r\n        this._config\r\n          .confirmAdd(text, this)\r\n          .then(() => {\r\n            this._add(text, text, { new: 1 });\r\n          })\r\n          .catch(() => {});\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} show Show menu after load. False during init\r\n   */\r\n  _loadFromServer(show = false) {\r\n    if (this._abortController) {\r\n      this._abortController.abort();\r\n    }\r\n    this._abortController = new AbortController();\r\n\r\n    // Read data params dynamically as well (eg: for vue JS)\r\n    let extraParams = this._selectElement.dataset.serverParams || {};\r\n    if (typeof extraParams == \"string\") {\r\n      extraParams = JSON.parse(extraParams);\r\n    }\r\n    const params = Object.assign({}, this._config.serverParams, extraParams);\r\n    // Pass current value\r\n    params[this._config.queryParam] = this._searchInput.value;\r\n    // Prevent caching\r\n    if (this._config.noCache) {\r\n      params.t = Date.now();\r\n    }\r\n    // We have a related field\r\n    if (params.related) {\r\n      /**\r\n       * @type {HTMLInputElement}\r\n       */\r\n      //@ts-ignore\r\n      const input = document.getElementById(params.related);\r\n      if (input) {\r\n        params.related = input.value;\r\n        const inputName = input.getAttribute(\"name\");\r\n        if (inputName) {\r\n          params[inputName] = input.value;\r\n        }\r\n      }\r\n    }\r\n\r\n    const urlParams = new URLSearchParams(params);\r\n    let url = this._config.server;\r\n    let fetchOptions = Object.assign(this._config.fetchOptions, {\r\n      method: this._config.serverMethod || \"GET\",\r\n      signal: this._abortController.signal,\r\n    });\r\n\r\n    if (fetchOptions.method === \"POST\") {\r\n      fetchOptions.body = urlParams;\r\n    } else {\r\n      url += \"?\" + urlParams.toString();\r\n    }\r\n\r\n    this._holderElement.classList.add(LOADING_CLASS);\r\n    fetch(url, fetchOptions)\r\n      .then((r) => this._config.onServerResponse(r, this))\r\n      .then((suggestions) => {\r\n        const data = suggestions[this._config.serverDataKey] || suggestions;\r\n        this.setData(data, !show);\r\n        this._abortController = null;\r\n        if (show) {\r\n          this._showSuggestions();\r\n        }\r\n      })\r\n      .catch((e) => {\r\n        // Current version of Firefox rejects the promise with a DOMException\r\n        if (e.name === \"AbortError\" || this._abortController.signal.aborted) {\r\n          return;\r\n        }\r\n        console.error(e);\r\n      })\r\n      .finally((e) => {\r\n        this._holderElement.classList.remove(LOADING_CLASS);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Wrapper for the public addItem method that check if the item\r\n   * can be added\r\n   *\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   * @returns {HTMLOptionElement|null}\r\n   */\r\n  _add(text, value = null, data = {}) {\r\n    if (!this.canAdd(text, data)) {\r\n      return null;\r\n    }\r\n    const el = this.addItem(text, value, data);\r\n    this._resetHtmlState();\r\n    if (this._config.keepOpen) {\r\n      this._showSuggestions();\r\n    } else {\r\n      this.resetSearchInput();\r\n    }\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} li\r\n   * @returns {Boolean}\r\n   */\r\n  _isItemEnabled(li) {\r\n    if (li.style.display === \"none\") {\r\n      return false;\r\n    }\r\n    const fc = li.firstElementChild;\r\n    return fc.tagName === \"A\" && !fc.classList.contains(\"disabled\");\r\n  }\r\n\r\n  /**\r\n   * @param {String} dir\r\n   * @param {*|HTMLElement} sel\r\n   * @returns {HTMLElement}\r\n   */\r\n  _moveSelection(dir = NEXT, sel = null) {\r\n    const active = this.getSelection();\r\n\r\n    // select first li if visible\r\n    if (!active) {\r\n      // no active selection, cannot go back\r\n      if (dir === PREV) {\r\n        return sel;\r\n      }\r\n      // find first enabled item\r\n      if (!sel) {\r\n        sel = this._dropElement.firstChild;\r\n        while (sel && !this._isItemEnabled(sel)) {\r\n          sel = sel[\"nextSibling\"];\r\n        }\r\n      }\r\n    } else {\r\n      const sibling = dir === NEXT ? \"nextSibling\" : \"previousSibling\";\r\n\r\n      // Iterate over visible li\r\n      sel = active.parentNode;\r\n      do {\r\n        sel = sel[sibling];\r\n      } while (sel && !this._isItemEnabled(sel));\r\n\r\n      // We have a new selection\r\n      if (sel) {\r\n        // Remove classes from current active\r\n        active.classList.remove(...this._activeClasses());\r\n      } else if (active) {\r\n        // Use active element as selection\r\n        sel = active.parentElement;\r\n      }\r\n    }\r\n\r\n    if (sel) {\r\n      // Scroll if necessary\r\n      const selHeight = sel.offsetHeight;\r\n      const selTop = sel.offsetTop;\r\n      const parent = sel.parentNode;\r\n      const parentHeight = parent.offsetHeight;\r\n      const parentScrollHeight = parent.scrollHeight;\r\n      const parentTop = parent.offsetTop;\r\n\r\n      // Reset scroll, this can happen if menu was scrolled then hidden\r\n      if (selHeight === 0) {\r\n        setTimeout(() => {\r\n          parent.scrollTop = 0;\r\n        });\r\n      }\r\n\r\n      if (dir === PREV) {\r\n        // Don't use scrollIntoView as it scrolls the whole window\r\n        // Avoid minor top scroll due to headers\r\n        const scrollTop = selTop - parentTop > 10 ? selTop - parentTop : 0;\r\n        parent.scrollTop = scrollTop;\r\n      } else {\r\n        // This is the equivalent of scrollIntoView(false) but only for parent node\r\n        // Only scroll if the element is not visible\r\n        const scrollNeeded = selTop + selHeight - (parentHeight + parent.scrollTop);\r\n        if (scrollNeeded > 0 && selHeight > 0) {\r\n          parent.scrollTop = selTop + selHeight - parentHeight + 1;\r\n          // On last element, make sure we scroll the the bottom\r\n          if (parent.scrollTop + parentHeight >= parentScrollHeight - 10) {\r\n            parent.scrollTop = selTop - parentTop;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Adjust link\r\n      const a = sel.querySelector(\"a\");\r\n      a.classList.add(...this._activeClasses());\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", a.id);\r\n      if (this._config.updateOnSelect) {\r\n        this._searchInput.value = a.dataset.label;\r\n        this._adjustWidth();\r\n      }\r\n    } else {\r\n      this._searchInput.setAttribute(\"aria-activedescendant\", \"\");\r\n    }\r\n    return sel;\r\n  }\r\n\r\n  /**\r\n   * Adjust the field to fit its content and show/hide placeholder if needed\r\n   */\r\n  _adjustWidth() {\r\n    this._holderElement.classList.remove(PLACEHOLDER_CLASS);\r\n    if (this._searchInput.value) {\r\n      this._searchInput.size = this._searchInput.value.length;\r\n    } else {\r\n      // Show the placeholder only if empty\r\n      if (this.getSelectedValues().length) {\r\n        this._searchInput.placeholder = \"\";\r\n        this._searchInput.size = 1;\r\n      } else {\r\n        this._searchInput.size = this._config.placeholder.length > 0 ? this._config.placeholder.length : 1;\r\n        this._searchInput.placeholder = this._config.placeholder;\r\n        this._holderElement.classList.add(PLACEHOLDER_CLASS);\r\n      }\r\n    }\r\n\r\n    // If the string contains ascii chars or strange font, input size may be wrong\r\n    // We cannot only rely on the size attribute\r\n    const v = this._searchInput.value || this._searchInput.placeholder;\r\n    const computedFontSize = window.getComputedStyle(this._holderElement).fontSize;\r\n    const w = calcTextWidth(v, computedFontSize) + 16;\r\n    this._searchInput.style.width = w + \"px\"; // Don't use minWidth as it would prevent using maxWidth\r\n  }\r\n\r\n  /**\r\n   * Add suggestions to the drop element\r\n   * @param {Array<Suggestion|SuggestionGroup>} suggestions\r\n   */\r\n  _buildSuggestions(suggestions) {\r\n    while (this._dropElement.lastChild) {\r\n      this._dropElement.removeChild(this._dropElement.lastChild);\r\n    }\r\n    let idx = 0;\r\n    let groupId = 1; // start at one, because data-id = \"\" + 0 doesn't do anything\r\n    for (let i = 0; i < suggestions.length; i++) {\r\n      const suggestion = suggestions[i];\r\n\r\n      if (!suggestion) {\r\n        continue;\r\n      }\r\n\r\n      // Handle optgroups\r\n      if (suggestion[\"group\"] && suggestion[\"items\"]) {\r\n        const newChild = ce(\"li\");\r\n        newChild.setAttribute(\"role\", \"presentation\");\r\n        newChild.dataset.id = \"\" + groupId;\r\n        const newChildSpan = ce(\"span\");\r\n        newChild.append(newChildSpan);\r\n        newChildSpan.classList.add(...[\"dropdown-header\", \"text-truncate\"]);\r\n        newChildSpan.innerHTML = suggestion[\"group\"];\r\n        this._dropElement.appendChild(newChild);\r\n\r\n        if (suggestion[\"items\"]) {\r\n          for (let j = 0; j < suggestion[\"items\"].length; j++) {\r\n            const groupSuggestion = suggestion[\"items\"][j];\r\n            groupSuggestion.group_id = groupId;\r\n            this._buildSuggestionsItem(suggestion[\"items\"][j], idx);\r\n            idx++;\r\n          }\r\n        }\r\n\r\n        groupId++;\r\n      }\r\n\r\n      //@ts-ignore\r\n      this._buildSuggestionsItem(suggestion, idx);\r\n      idx++;\r\n    }\r\n\r\n    // Create the not found message\r\n    if (this._config.notFoundMessage) {\r\n      const notFound = ce(\"li\");\r\n      notFound.setAttribute(\"role\", \"presentation\");\r\n      notFound.classList.add(CLASS_PREFIX + \"not-found\");\r\n      // Actual message is refreshed on typing, but we need item for consistency\r\n      notFound.innerHTML = `<span class=\"dropdown-item\"></span>`;\r\n      this._dropElement.appendChild(notFound);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Suggestion} suggestion\r\n   * @param {Number} i The global counter\r\n   */\r\n  _buildSuggestionsItem(suggestion, i) {\r\n    if (!suggestion[this._config.valueField]) {\r\n      return;\r\n    }\r\n\r\n    const value = suggestion[this._config.valueField];\r\n    const label = suggestion[this._config.labelField];\r\n\r\n    let textContent = this._config.onRenderItem(suggestion, label, this);\r\n\r\n    const newChild = ce(\"li\");\r\n    newChild.setAttribute(\"role\", \"presentation\");\r\n    if (suggestion.group_id) {\r\n      newChild.setAttribute(\"data-group-id\", \"\" + suggestion.group_id);\r\n    }\r\n    const newChildLink = ce(\"a\");\r\n    newChild.append(newChildLink);\r\n    newChildLink.id = this._dropElement.id + \"-\" + i;\r\n    newChildLink.classList.add(...[\"dropdown-item\", \"text-truncate\"]);\r\n    if (suggestion.disabled) {\r\n      newChildLink.classList.add(...[\"disabled\"]);\r\n    }\r\n    newChildLink.setAttribute(VALUE_ATTRIBUTE, value);\r\n    newChildLink.dataset.label = label;\r\n    this._config.searchFields.forEach((sf) => {\r\n      newChild.dataset[sf] = suggestion[sf];\r\n    });\r\n    newChildLink.setAttribute(\"href\", \"#\");\r\n    newChildLink.innerHTML = textContent;\r\n    this._dropElement.appendChild(newChild);\r\n\r\n    // Hover sets active item\r\n    newChildLink.addEventListener(\"mouseenter\", (event) => {\r\n      // Don't trigger enter if using arrows\r\n      if (this._keyboardNavigation) {\r\n        return;\r\n      }\r\n      this.removeSelection();\r\n      newChild.querySelector(\"a\").classList.add(...this._activeClasses());\r\n    });\r\n    newChildLink.addEventListener(\"mousedown\", (event) => {\r\n      // Otherwise searchInput would lose focus and close the menu\r\n      event.preventDefault();\r\n    });\r\n    newChildLink.addEventListener(\"click\", (event) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      this._config\r\n        .confirmAdd(value, this)\r\n        .then(() => {\r\n          this._add(label, value, suggestion.data);\r\n          this._config.onSelectItem(suggestion, this);\r\n        })\r\n        .catch(() => {});\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {NodeListOf<HTMLOptionElement>}\r\n   */\r\n  initialOptions() {\r\n    return this._selectElement.querySelectorAll(\"option[data-init]\");\r\n  }\r\n\r\n  /**\r\n   * Call this before looping in a list that calls addItem\r\n   * This will make sure addItem will not add incorrectly options to the select\r\n   */\r\n  _removeSelectedAttrs() {\r\n    this._selectElement.querySelectorAll(\"option\").forEach((opt) => {\r\n      rmAttr(opt, \"selected\");\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.removeAll();\r\n\r\n    // Reset doesn't fire change event\r\n    this._fireEvents = false;\r\n    const opts = this.initialOptions();\r\n    this._removeSelectedAttrs();\r\n    for (let j = 0; j < opts.length; j++) {\r\n      const iv = opts[j];\r\n      const data = Object.assign(\r\n        {},\r\n        {\r\n          disabled: iv.hasAttribute(\"disabled\"),\r\n        },\r\n        iv.dataset\r\n      );\r\n      this.addItem(iv.textContent, iv.value, data);\r\n    }\r\n    this._resetHtmlState();\r\n    this._fireEvents = true;\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} init Pass true during init\r\n   */\r\n  resetSearchInput(init = false) {\r\n    this._searchInput.value = \"\";\r\n    this._adjustWidth();\r\n\r\n    if (!init) {\r\n      if (!this._shouldShow()) {\r\n        this.hideSuggestions();\r\n      }\r\n\r\n      // Trigger input even to show suggestions if needed when focused\r\n      if (this._searchInput === document.activeElement) {\r\n        this._searchInput.dispatchEvent(new Event(\"input\"));\r\n      }\r\n    }\r\n\r\n    // We use visibility instead of display to keep layout intact\r\n    if (this.isMaxReached()) {\r\n      this._holderElement.classList.add(MAX_REACHED_CLASS);\r\n      this._searchInput.style.visibility = \"hidden\";\r\n    } else {\r\n      if (this._searchInput.style.visibility == \"hidden\") {\r\n        this._searchInput.style.visibility = \"visible\";\r\n      }\r\n    }\r\n\r\n    if (this.isSingle() && !init) {\r\n      //@ts-ignore\r\n      document.activeElement.blur();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  getSelectedValues() {\r\n    // option[selected] is used rather that selectedOptions as it works more consistently\r\n    /**\r\n     * @type {NodeListOf<HTMLOptionElement>}\r\n     */\r\n    const selected = this._selectElement.querySelectorAll(\"option[selected]\");\r\n    return Array.from(selected).map((el) => el.value);\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  getAvailableValues() {\r\n    /**\r\n     * @type {NodeListOf<HTMLOptionElement>}\r\n     */\r\n    const selected = this._selectElement.querySelectorAll(\"option\");\r\n    return Array.from(selected).map((el) => el.value);\r\n  }\r\n\r\n  /**\r\n   * Show suggestions or search them depending on live server\r\n   * @param {Boolean} check\r\n   */\r\n  showOrSearch(check = true) {\r\n    if (check && !this._shouldShow()) {\r\n      // focusing should not clear validation\r\n      this.hideSuggestions(false);\r\n      return;\r\n    }\r\n    if (this._config.liveServer) {\r\n      this._searchFunc();\r\n    } else {\r\n      this._showSuggestions();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   * @param {Boolean} clearValidation\r\n   */\r\n  hideSuggestions(clearValidation = true) {\r\n    this._dropElement.classList.remove(SHOW_CLASS);\r\n    attrs(this._searchInput, {\r\n      \"aria-expanded\": \"false\",\r\n    });\r\n    this.removeSelection();\r\n    if (clearValidation) {\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show or hide suggestions\r\n   * @param {Boolean} check\r\n   * @param {Boolean} clearValidation\r\n   */\r\n  toggleSuggestions(check = true, clearValidation = true) {\r\n    if (this._dropElement.classList.contains(SHOW_CLASS)) {\r\n      this.hideSuggestions(clearValidation);\r\n    } else {\r\n      this.showOrSearch(check);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Do we have enough input to show suggestions ?\r\n   * @returns {Boolean}\r\n   */\r\n  _shouldShow() {\r\n    if (this.isDisabled() || this.isMaxReached()) {\r\n      return false;\r\n    }\r\n    return this._searchInput.value.length >= this._config.suggestionsThreshold;\r\n  }\r\n\r\n  /**\r\n   * The element create with buildSuggestions\r\n   */\r\n  _showSuggestions() {\r\n    // It's not focused anymore\r\n    if (document.activeElement != this._searchInput) {\r\n      return;\r\n    }\r\n    // Never show suggestions if you cannot add new values\r\n    if (this._searchInput.style.visibility == \"hidden\") {\r\n      return;\r\n    }\r\n\r\n    const lookup = normalize(this._searchInput.value);\r\n\r\n    const valueCounter = {};\r\n\r\n    // Filter the list according to search string\r\n    const list = this._dropElement.querySelectorAll(\"li\");\r\n    let count = 0;\r\n    let firstItem = null;\r\n    let hasPossibleValues = false;\r\n    let visibleGroups = {};\r\n    for (let i = 0; i < list.length; i++) {\r\n      /**\r\n       * @type {HTMLLIElement}\r\n       */\r\n      let item = list[i];\r\n      /**\r\n       * @type {HTMLAnchorElement|HTMLSpanElement}\r\n       */\r\n      //@ts-ignore\r\n      let link = item.firstElementChild;\r\n\r\n      // This is the empty result message or a header\r\n      if (link instanceof HTMLSpanElement) {\r\n        // We will show it later\r\n        if (item.dataset.id) {\r\n          visibleGroups[item.dataset.id] = false;\r\n        }\r\n        hideItem(item);\r\n        continue;\r\n      }\r\n\r\n      // Remove previous selection\r\n      link.classList.remove(...this._activeClasses());\r\n\r\n      // Hide selected values\r\n      if (!this._config.allowSame) {\r\n        const v = link.getAttribute(VALUE_ATTRIBUTE);\r\n        // Find if the matching option is already selected by index to deal with same values\r\n        valueCounter[v] = valueCounter[v] || 0;\r\n        const opt = this._findOption(link.getAttribute(VALUE_ATTRIBUTE), \"[selected]\", valueCounter[v]++);\r\n        if (opt) {\r\n          hideItem(item);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      // Check search length since we can trigger dropdown with arrow\r\n      const showAllSuggestions = this._config.showAllSuggestions || lookup.length === 0;\r\n      // Do we find a matching string or do we display immediately ?\r\n      let isMatched = lookup.length == 0 && this._config.suggestionsThreshold === 0;\r\n      if (!showAllSuggestions && lookup.length > 0) {\r\n        // match on any field\r\n        this._config.searchFields.forEach((sf) => {\r\n          const text = normalize(link.dataset[sf]);\r\n          let found = false;\r\n          if (this._config.fuzzy) {\r\n            found = fuzzyMatch(text, lookup);\r\n          } else {\r\n            const idx = text.indexOf(lookup);\r\n            found = this._config.startsWith ? idx === 0 : idx >= 0;\r\n          }\r\n          if (found) {\r\n            isMatched = true;\r\n          }\r\n        });\r\n      }\r\n\r\n      const selectFirst = isMatched || lookup.length === 0;\r\n      if (showAllSuggestions || isMatched) {\r\n        count++;\r\n        showItem(item);\r\n        if (item.dataset.groupId) {\r\n          visibleGroups[item.dataset.groupId] = true;\r\n        }\r\n        // Only select as first item if its matching or no lookup\r\n        if (!firstItem && this._isItemEnabled(item) && selectFirst) {\r\n          firstItem = item;\r\n        }\r\n        if (this._config.maximumItems > 0 && count > this._config.maximumItems) {\r\n          hideItem(item);\r\n        }\r\n      } else {\r\n        hideItem(item);\r\n      }\r\n\r\n      if (this._config.highlightTyped) {\r\n        // using .textContent removes any html that can be present (eg: mark added through highlightTyped)\r\n        const textContent = link.textContent;\r\n        const idx = normalize(textContent).indexOf(lookup);\r\n        const highlighted =\r\n          textContent.substring(0, idx) +\r\n          `<mark class=\"${this._config.highlightClass}\">${textContent.substring(idx, idx + lookup.length)}</mark>` +\r\n          textContent.substring(idx + lookup.length, textContent.length);\r\n        link.innerHTML = highlighted;\r\n      }\r\n\r\n      if (this._isItemEnabled(item)) {\r\n        hasPossibleValues = true;\r\n      }\r\n    }\r\n\r\n    // No item and we don't allow new items => error\r\n    if (!this._config.allowNew && !(lookup.length === 0 && !hasPossibleValues)) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n    }\r\n\r\n    // If we allow new elements, regex validation should happen on canAdd instead\r\n    if (this._config.allowNew && this._config.regex && this.isInvalid()) {\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n    }\r\n\r\n    // Show all groups with visible values\r\n    Array.from(list)\r\n      .filter((li) => {\r\n        return li.dataset.id;\r\n      })\r\n      .forEach((li) => {\r\n        if (visibleGroups[li.dataset.id] === true) {\r\n          showItem(li);\r\n        }\r\n      });\r\n\r\n    if (hasPossibleValues) {\r\n      // Remove validation message if we show selectable values\r\n      this._holderElement.classList.remove(INVALID_CLASS);\r\n\r\n      // Autoselect first\r\n      if (firstItem && this._config.autoselectFirst) {\r\n        this.removeSelection();\r\n        this._moveSelection(NEXT, firstItem);\r\n      }\r\n    }\r\n\r\n    // Remove dropdown if list is empty\r\n    if (count === 0) {\r\n      if (this._config.notFoundMessage) {\r\n        /**\r\n         * @type {HTMLElement}\r\n         */\r\n        const notFound = this._dropElement.querySelector(\".\" + CLASS_PREFIX + \"not-found\");\r\n        notFound.style.display = \"block\";\r\n        const notFoundMessage = this._config.notFoundMessage.replace(\"{{tag}}\", this._searchInput.value);\r\n        notFound.innerHTML = `<span class=\"dropdown-item\">${notFoundMessage}</span>`;\r\n        this._showDropdown();\r\n      } else {\r\n        // Remove dropdown if not found (do not clear validation)\r\n        this.hideSuggestions(false);\r\n      }\r\n    } else {\r\n      // Or show it if necessary\r\n      this._showDropdown();\r\n    }\r\n  }\r\n\r\n  _showDropdown() {\r\n    const isVisible = this._dropElement.classList.contains(SHOW_CLASS);\r\n    if (!isVisible) {\r\n      this._dropElement.classList.add(SHOW_CLASS);\r\n      attrs(this._searchInput, {\r\n        \"aria-expanded\": \"true\",\r\n      });\r\n    }\r\n    this._positionMenu(isVisible);\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} wasVisible\r\n   */\r\n  _positionMenu(wasVisible = false) {\r\n    const isRTL = this._rtl;\r\n    const fixed = this._config.fixed;\r\n    const fullWidth = this._config.fullWidth;\r\n    const bounds = this._searchInput.getBoundingClientRect();\r\n    const holderBounds = this._holderElement.getBoundingClientRect();\r\n\r\n    let left = 0;\r\n    let top = 0;\r\n\r\n    if (fixed) {\r\n      // In full width, use holder as left reference, otherwise use input\r\n      if (fullWidth) {\r\n        left = holderBounds.x;\r\n        top = holderBounds.y + holderBounds.height + 2; // 2px offset\r\n      } else {\r\n        left = bounds.x;\r\n        top = bounds.y + bounds.height;\r\n      }\r\n    } else {\r\n      // When positioning is not fixed, we leave it up to the browser\r\n      // it may not work in complex situations with scrollable overflows, etc\r\n      if (fullWidth) {\r\n        // Stick it at the start\r\n        left = 0;\r\n        // Move it below\r\n        top = holderBounds.height + 2; // 2px offset\r\n      } else {\r\n        // Position next to input (offsetLeft != bounds.x)\r\n        left = this._searchInput.offsetLeft;\r\n        top = this._searchInput.offsetHeight + this._searchInput.offsetTop;\r\n      }\r\n    }\r\n\r\n    // Align end\r\n    if (isRTL && !fullWidth) {\r\n      left -= this._dropElement.offsetWidth - bounds.width;\r\n    }\r\n\r\n    // Horizontal overflow\r\n    if (!fullWidth) {\r\n      const w = Math.min(window.innerWidth, document.body.offsetWidth);\r\n      const hdiff = isRTL\r\n        ? bounds.x + bounds.width - this._dropElement.offsetWidth - 1\r\n        : w - 1 - (bounds.x + this._dropElement.offsetWidth);\r\n      if (hdiff < 0) {\r\n        left = isRTL ? left - hdiff : left + hdiff;\r\n      }\r\n    }\r\n\r\n    // Use full holder width\r\n    if (fullWidth) {\r\n      this._dropElement.style.width = this._holderElement.offsetWidth + \"px\";\r\n    }\r\n\r\n    if (!wasVisible) {\r\n      // Reset any height overflow adjustement\r\n      this._dropElement.style.transform = \"unset\";\r\n    }\r\n\r\n    Object.assign(this._dropElement.style, {\r\n      // Position element\r\n      left: left + \"px\",\r\n      top: top + \"px\",\r\n    });\r\n\r\n    // Overflow height\r\n    const dropBounds = this._dropElement.getBoundingClientRect();\r\n    const h = window.innerHeight;\r\n\r\n    // We display above input if it overflows\r\n    if (dropBounds.y + dropBounds.height > h || this._dropElement.style.transform.includes(\"translateY\")) {\r\n      // We need to add the offset twice\r\n      const topOffset = fullWidth ? holderBounds.height + 4 : bounds.height;\r\n      // In chrome, we need 100.1% to avoid blurry text\r\n      // @link https://stackoverflow.com/questions/32034574/font-looks-blurry-after-translate-in-chrome\r\n      this._dropElement.style.transform = \"translateY(calc(-100.1% - \" + topOffset + \"px))\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Number}\r\n   */\r\n  _getBootstrapVersion() {\r\n    let ver = 5;\r\n    // If we have jQuery and the tooltip plugin for BS4\r\n    //@ts-ignore\r\n    let jq = window.jQuery;\r\n    if (jq && jq.fn.tooltip && jq.fn.tooltip.Constructor) {\r\n      ver = parseInt(jq.fn.tooltip.Constructor.VERSION.charAt(0));\r\n    }\r\n    return ver;\r\n  }\r\n\r\n  /**\r\n   * Find if label is already selected (based on attribute)\r\n   * @param {string} text\r\n   * @returns {Boolean}\r\n   */\r\n  _isSelected(text) {\r\n    const arr = Array.from(this._selectElement.querySelectorAll(\"option\"));\r\n    const selOpt = arr.find((el) => el.textContent == text && el.getAttribute(\"selected\"));\r\n    return selOpt ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Find if label is already selectable (based on attribute)\r\n   * @param {string} text\r\n   * @returns {Boolean}\r\n   */\r\n  _isSelectable(text) {\r\n    const arr = Array.from(this._selectElement.querySelectorAll(\"option\"));\r\n    const opts = arr.filter((el) => el.textContent == text);\r\n    // Only consider actual <option> in the select\r\n    if (opts.length > 0) {\r\n      const freeOpt = opts.find((opt) => !opt.getAttribute(\"selected\"));\r\n      if (!freeOpt) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Find if label is selectable (based on attribute)\r\n   * @param {string} text\r\n   * @returns {Boolean}\r\n   */\r\n  hasItem(text) {\r\n    for (let item of this._config.items) {\r\n      const items = item[\"items\"] || [item];\r\n      for (let si of items) {\r\n        if (si[this._config.labelField] == text) return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Checks if value matches a configured regex\r\n   * @param {string} value\r\n   * @returns {Boolean}\r\n   */\r\n  _validateRegex(value) {\r\n    const regex = new RegExp(this._config.regex.trim());\r\n    return regex.test(value);\r\n  }\r\n\r\n  /**\r\n   * @returns {HTMLElement}\r\n   */\r\n  getSelection() {\r\n    return this._dropElement.querySelector(\"a.\" + ACTIVE_CLASS);\r\n  }\r\n\r\n  removeSelection() {\r\n    const selection = this.getSelection();\r\n    if (selection) {\r\n      selection.classList.remove(...this._activeClasses());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @returns {Array}\r\n   */\r\n  _activeClasses() {\r\n    return [...this._config.activeClasses, ...[ACTIVE_CLASS]];\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   * @returns {HTMLElement}\r\n   */\r\n  getActiveSelection() {\r\n    return this.getSelection();\r\n  }\r\n\r\n  /**\r\n   * @deprecated since 1.5\r\n   */\r\n  removeActiveSelection() {\r\n    return this.removeSelection();\r\n  }\r\n\r\n  /**\r\n   * Remove all items\r\n   */\r\n  removeAll() {\r\n    let items = this.getSelectedValues();\r\n    items.forEach((item) => {\r\n      this.removeItem(item, true);\r\n    });\r\n    this._adjustWidth();\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} noEvents\r\n   */\r\n  removeLastItem(noEvents = false) {\r\n    let lastItem = this.getLastItem();\r\n    if (lastItem) {\r\n      this.removeItem(lastItem, noEvents);\r\n    }\r\n  }\r\n\r\n  getLastItem() {\r\n    let items = this._containerElement.querySelectorAll(\"span.\" + CLASS_PREFIX + \"badge\");\r\n    if (!items.length) {\r\n      return;\r\n    }\r\n    let lastItem = items[items.length - 1];\r\n    return lastItem.getAttribute(VALUE_ATTRIBUTE);\r\n  }\r\n\r\n  enable() {\r\n    this._selectElement.setAttribute(\"disabled\", \"\");\r\n    this.resetState();\r\n  }\r\n\r\n  disable() {\r\n    rmAttr(this._selectElement, \"disabled\");\r\n    this.resetState();\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isDisabled() {\r\n    return this._selectElement.hasAttribute(\"disabled\") || this._selectElement.disabled || this._selectElement.hasAttribute(\"readonly\");\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isDropdownVisible() {\r\n    return this._dropElement.classList.contains(SHOW_CLASS);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isInvalid() {\r\n    return this._holderElement.classList.contains(INVALID_CLASS);\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isSingle() {\r\n    return !this._selectElement.hasAttribute(\"multiple\");\r\n  }\r\n\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  isMaxReached() {\r\n    return this._config.max && this.getSelectedValues().length >= this._config.max;\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {Object} data\r\n   * @returns {Boolean}\r\n   */\r\n  canAdd(text, data = {}) {\r\n    // Check invalid input\r\n    if (!text) {\r\n      return false;\r\n    }\r\n    // Doesn't allow new\r\n    if (data.new && !this._config.allowNew) {\r\n      return false;\r\n    }\r\n    // This item doesn't exist\r\n    if (!data.new && !this.hasItem(text)) {\r\n      return false;\r\n    }\r\n    // Check disabled\r\n    if (this.isDisabled()) {\r\n      return false;\r\n    }\r\n    // Check already selected input (single will replace, so never return false if selected)\r\n    if (!this.isSingle() && !this._config.allowSame) {\r\n      // Check if value is selected\r\n      if (data.new) {\r\n        if (this._isSelected(text)) {\r\n          return false;\r\n        }\r\n      } else {\r\n        if (!this._isSelectable(text)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    // Check for max\r\n    if (this.isMaxReached()) {\r\n      return false;\r\n    }\r\n    // Check for regex on new input\r\n    if (this._config.regex && data.new && !this._validateRegex(text)) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n      return false;\r\n    }\r\n    // Check for custom validation\r\n    if (this._config.onCanAdd && this._config.onCanAdd(text, data, this) === false) {\r\n      this._holderElement.classList.add(INVALID_CLASS);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getData() {\r\n    return this._config.items;\r\n  }\r\n\r\n  /**\r\n   * Set data\r\n   * @param {Array<Suggestion|SuggestionGroup>|Object} src An array of items or a value:label object\r\n   * @param {Boolean} init called during init\r\n   */\r\n  setData(src, init = false) {\r\n    // Convert value:label to array\r\n    if (!Array.isArray(src)) {\r\n      src = Object.entries(src).map(([value, label]) => ({ value, label }));\r\n    }\r\n\r\n    // If not passed in config\r\n    if (this._config.items != src) {\r\n      this._config.items = src;\r\n    }\r\n\r\n    // Track initial selection in case of reset\r\n    if (init) {\r\n      // addItem will add attribute back\r\n      this._removeSelectedAttrs();\r\n      src.forEach((suggestion) => {\r\n        const value = suggestion[this._config.valueField];\r\n        const label = suggestion[this._config.labelField];\r\n\r\n        if (!value) {\r\n          return;\r\n        }\r\n\r\n        // Selection on item only matters on init\r\n        if (suggestion.selected || this._config.selected.includes(value)) {\r\n          const added = this.addItem(label, value, suggestion.data);\r\n          // Add attribute to actual option to allow for same options being selected\r\n          if (added) {\r\n            added.setAttribute(\"data-init\", \"true\");\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this._buildSuggestions(src);\r\n    this._resetHtmlState();\r\n  }\r\n\r\n  /**\r\n   * Keep in mind that we can have the same value for multiple options\r\n   * @param {*} value\r\n   * @param {string} mode\r\n   * @param {number} counter\r\n   * @returns {HTMLOptionElement|null}\r\n   */\r\n  _findOption(value = null, mode = \"\", counter = 0) {\r\n    // escape invalid characters for HTML attributes: \\' \" = < > ` &.'\r\n    const val = value === null ? \"\" : '[value=\"' + CSS.escape(value) + '\"]';\r\n    const sel = \"option\" + val + mode;\r\n    const opts = this._selectElement.querySelectorAll(sel);\r\n    //@ts-ignore\r\n    return opts[counter] || null;\r\n  }\r\n\r\n  /**\r\n   * You might want to use canAdd before to ensure the item is valid\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   * @return {HTMLOptionElement} The created or selected option\r\n   */\r\n  addItem(text, value = null, data = {}) {\r\n    if (!value) {\r\n      value = text;\r\n    }\r\n\r\n    // Single items remove first\r\n    if (this.isSingle() && this.getSelectedValues().length) {\r\n      this.removeLastItem(true);\r\n    }\r\n\r\n    let opt = this._findOption(value, \":not([selected])\");\r\n\r\n    // we need to create a new option\r\n    if (!opt) {\r\n      opt = ce(\"option\");\r\n      opt.value = value;\r\n      opt.textContent = text; // innerText is not well supported by jsdom\r\n      // Pass along data provided\r\n      for (const [key, value] of Object.entries(data)) {\r\n        opt.dataset[key] = value;\r\n      }\r\n      this._selectElement.appendChild(opt);\r\n      this._config.onCreateItem(opt, this);\r\n    }\r\n\r\n    if (opt) {\r\n      data = Object.assign(\r\n        {\r\n          title: opt.getAttribute(\"title\"),\r\n        },\r\n        data,\r\n        opt.dataset\r\n      );\r\n    }\r\n    // update select, we need to set attribute for option[selected]\r\n    opt.setAttribute(\"selected\", \"selected\");\r\n    opt.selected = true;\r\n\r\n    this._createBadge(text, value, data);\r\n\r\n    // Fire change event\r\n    if (this._fireEvents) {\r\n      this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n    }\r\n\r\n    return opt;\r\n  }\r\n\r\n  /**\r\n   * mobile safari is doing it's own crazy thing...\r\n   * without this, it wil not pick up the proper state of the select element and validation will fail\r\n   */\r\n  _resetHtmlState() {\r\n    const html = this._selectElement.innerHTML;\r\n    this._selectElement.innerHTML = \"\";\r\n    this._selectElement.innerHTML = html;\r\n\r\n    this._adjustWidth();\r\n  }\r\n\r\n  /**\r\n   * @param {string} text\r\n   * @param {string} value\r\n   * @param {object} data\r\n   */\r\n  _createBadge(text, value = null, data = {}) {\r\n    const v5 = this._getBootstrapVersion() === 5;\r\n    const disabled = data.disabled && parseBool(data.disabled);\r\n    const allowClear = this._config.allowClear && !disabled;\r\n\r\n    // create span\r\n    let html = text;\r\n\r\n    /**\r\n     * @type {HTMLSpanElement}\r\n     */\r\n    let span = ce(\"span\");\r\n    let classes = [CLASS_PREFIX + \"badge\"];\r\n\r\n    const isSingle = this.isSingle() && !this._config.singleBadge;\r\n\r\n    if (!isSingle) {\r\n      classes.push(\"badge\");\r\n      let badgeStyle = this._config.badgeStyle;\r\n      if (data.badgeStyle) {\r\n        badgeStyle = data.badgeStyle;\r\n      }\r\n      if (data.badgeClass) {\r\n        classes.push(...data.badgeClass.split(\" \"));\r\n      }\r\n      if (this._config.baseClass) {\r\n        // custom style\r\n        classes.push(...this._config.baseClass.split(\" \"));\r\n      } else if (v5) {\r\n        // https://getbootstrap.com/docs/5.3/components/badge/\r\n        classes = [...classes, ...[\"bg-\" + badgeStyle], \"text-truncate\"];\r\n      } else {\r\n        // https://getbootstrap.com/docs/4.6/components/badge/\r\n        classes = [...classes, ...[\"badge-\" + badgeStyle]];\r\n      }\r\n\r\n      // add extra styles to avoid any layout issues due to very large labels\r\n      span.style.maxWidth = \"100%\";\r\n    }\r\n\r\n    if (disabled) {\r\n      classes.push(...[\"disabled\", \"opacity-50\"]);\r\n    }\r\n\r\n    const vertMargin = isSingle ? 0 : 2;\r\n\r\n    // We cannot really rely on classes to get a proper sizing\r\n    span.style.margin = vertMargin + \"px 6px \" + vertMargin + \"px 0px\";\r\n    // Use logical styles for RTL support\r\n    span.style.marginBlock = vertMargin + \"px\";\r\n    span.style.marginInline = \"0px 6px\";\r\n    span.classList.add(...classes);\r\n    span.setAttribute(VALUE_ATTRIBUTE, value);\r\n    // Tooltips\r\n    if (data.title) {\r\n      span.setAttribute(\"title\", data.title);\r\n    }\r\n\r\n    if (allowClear) {\r\n      // NOTE: we cannot use flex and align-item center because it disables text truncation\r\n      // TODO: btn-close white is deprecated\r\n      // @link https://getbootstrap.com/docs/5.3/components/close-button/\r\n      const closeClass = classes.includes(\"text-dark\") || isSingle ? \"btn-close\" : \"btn-close btn-close-white\";\r\n      let btnMargin = \"margin-inline: 0px 6px;\";\r\n      let pos = \"left\";\r\n      if (this._config.clearEnd) {\r\n        pos = \"right\";\r\n      }\r\n      if (pos == \"right\") {\r\n        btnMargin = \"margin-inline: 6px 0px;\";\r\n      }\r\n      const btn = v5\r\n        ? '<button type=\"button\" style=\"font-size:0.65em;' +\r\n          btnMargin +\r\n          '\" class=\"' +\r\n          closeClass +\r\n          '\" aria-label=\"' +\r\n          this._config.clearLabel +\r\n          '\"></button>'\r\n        : '<button type=\"button\" style=\"font-size:1em;' +\r\n          btnMargin +\r\n          'text-shadow:none;color:currentColor;transform:scale(1.2);float:none\" class=\"close\" aria-label=\"' +\r\n          this._config.clearLabel +\r\n          '\"><span aria-hidden=\"true\">&times;</span></button>';\r\n\r\n      // rtl will follow logical html order\r\n      html = pos == \"left\" ? btn + html : html + btn;\r\n    }\r\n\r\n    span.innerHTML = html;\r\n    this._containerElement.insertBefore(span, this._searchInput);\r\n\r\n    // tooltips\r\n    if (data.title && tooltip && v5) {\r\n      tooltip.getOrCreateInstance(span);\r\n    }\r\n\r\n    if (allowClear) {\r\n      span.querySelector(\"button\").addEventListener(\"click\", (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.isDisabled()) {\r\n          this._config\r\n            .confirmClear(value, this)\r\n            .then(() => {\r\n              this.removeItem(value);\r\n              //@ts-ignore\r\n              document.activeElement.blur();\r\n              this._adjustWidth();\r\n            })\r\n            .catch(() => {});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @param {Boolean} value\r\n   */\r\n  removeItem(value, noEvents = false) {\r\n    // Remove badge if any\r\n    // escape invalid characters for HTML attributes: \\' \" = < > ` &.'\r\n    const escapedValue = CSS.escape(value);\r\n    let items = this._containerElement.querySelectorAll(\"span[\" + VALUE_ATTRIBUTE + '=\"' + escapedValue + '\"]');\r\n    if (!items.length) {\r\n      return;\r\n    }\r\n    // Remove the last entry for this value\r\n    const idx = items.length - 1;\r\n    const item = items[idx];\r\n    if (item) {\r\n      if (item.dataset.bsOriginalTitle) {\r\n        tooltip.getOrCreateInstance(item).dispose();\r\n      }\r\n      item.remove();\r\n    }\r\n\r\n    // update select\r\n    let opt = this._findOption(value, \"[selected]\", idx);\r\n    if (opt) {\r\n      rmAttr(opt, \"selected\");\r\n      opt.selected = false;\r\n\r\n      // Fire change event\r\n      if (this._fireEvents && !noEvents) {\r\n        this._selectElement.dispatchEvent(new Event(\"change\", { bubbles: true }));\r\n      }\r\n    }\r\n\r\n    // Make input visible\r\n    if (this._searchInput.style.visibility == \"hidden\" && !this.isMaxReached()) {\r\n      this._searchInput.style.visibility = \"visible\";\r\n      this._holderElement.classList.remove(MAX_REACHED_CLASS);\r\n    }\r\n\r\n    if (!noEvents) {\r\n      this._config.onClearItem(value, this);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Tags;\r\n"],
  "mappings": "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",
  "names": ["DEFAULTS", "item", "label", "inst", "value", "option", "event", "text", "data", "response", "CLASS_PREFIX", "LOADING_CLASS", "ACTIVE_CLASS", "INVALID_CLASS", "MAX_REACHED_CLASS", "SHOW_CLASS", "VALUE_ATTRIBUTE", "NEXT", "PREV", "FOCUS_CLASS", "PLACEHOLDER_CLASS", "DISABLED_CLASS", "INSTANCE_MAP", "counter", "tooltip", "debounce", "func", "timeout", "timer", "args", "calcTextWidth", "size", "span", "ce", "width", "removeDiacritics", "str", "normalize", "fuzzyMatch", "lookup", "pos", "c", "hideItem", "attrs", "showItem", "el", "k", "v", "rmAttr", "attr", "parseBool", "tagName", "Tags", "config", "_selectElement", "_configure", "_keyboardNavigation", "_searchFunc", "_loadFromServer", "_config", "_fireEvents", "_configureParent", "_holderElement", "_containerElement", "_dropElement", "_searchInput", "_configureHolderElement", "_configureContainerElement", "_configureSelectElement", "_configureSearchInput", "_configureDropElement", "ev", "_handleEvent", "type", "selector", "opts", "list", "i", "_timer", "_findOption", "json", "o", "key", "defaultValue", "r", "p", "_getPlaceholder", "firstOption", "selectEl", "dropEl", "dropStyles", "holder", "className", "containerStyles", "searchInput", "_rtl", "_abortController", "clearValidation", "_enterValue", "sel", "lastChar", "addData", "_add", "_adjustWidth", "target", "_moveSelection", "lastItem", "e", "_positionMenu", "init", "_setSelectedAttributes", "selectedOptions", "j", "convertOption", "suggestions", "selection", "show", "extraParams", "params", "input", "inputName", "urlParams", "url", "fetchOptions", "_showSuggestions", "_resetHtmlState", "_isItemEnabled", "li", "fc", "dir", "active", "sibling", "_activeClasses", "selHeight", "selTop", "parent", "parentHeight", "parentScrollHeight", "parentTop", "scrollTop", "a", "computedFontSize", "w", "_buildSuggestions", "idx", "groupId", "suggestion", "newChild", "newChildSpan", "groupSuggestion", "_buildSuggestionsItem", "notFound", "textContent", "newChildLink", "sf", "_removeSelectedAttrs", "opt", "iv", "_shouldShow", "selected", "check", "valueCounter", "count", "firstItem", "hasPossibleValues", "visibleGroups", "link", "showAllSuggestions", "isMatched", "found", "selectFirst", "highlighted", "notFoundMessage", "_showDropdown", "isVisible", "wasVisible", "isRTL", "fixed", "fullWidth", "bounds", "holderBounds", "left", "top", "hdiff", "dropBounds", "h", "topOffset", "_getBootstrapVersion", "ver", "jq", "_isSelected", "_isSelectable", "items", "si", "_validateRegex", "noEvents", "src", "added", "mode", "_createBadge", "html", "v5", "disabled", "allowClear", "classes", "isSingle", "badgeStyle", "vertMargin", "closeClass", "btnMargin", "btn", "escapedValue", "tags_default"]
}
